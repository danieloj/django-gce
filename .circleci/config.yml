version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk:latest
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build Django Docker image
          command: |
            docker build -t gcr.io/${GOOGLE_PROJECT_ID}/djangodocker:${CIRCLE_SHA1} app
      - run:
          name: Authenticate on gcloud
          command: |
            echo ${GOOGLE_AUTH} | base64 -i --decode > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Push Django Docker image to Google Container Registry
          command: |
            gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/djangodocker:${CIRCLE_SHA1}
            gcloud container images add-tag gcr.io/${GOOGLE_PROJECT_ID}/djangodocker:${CIRCLE_SHA1} gcr.io/${GOOGLE_PROJECT_ID}/djangodocker:latest
      - run:
          name: Setup gcloud for deployment
          command: |
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME_PRODUCTION}
      - run:
          name: Deploy the new image to the Django deployment
          command: |
            sed -i -e 's/:latest/:'"${CIRCLE_SHA1}"'/g' ops/django-deployment.yaml
            kubectl apply -f ops/ingress.yaml
            kubectl apply -f ops/postgres-service.yaml
            kubectl apply -f ops/django-service.yaml
            kubectl apply -f ops/postgres-deployment.yaml
            kubectl apply -f ops/django-deployment.yaml
